set -g default-terminal "xterm"

set -g status-utf8 on
set -g utf8 on
set -g default-terminal "screen-256color"

set -g status-bg black
set -g status-fg white

set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01
setw -g monitor-activity on
set -g visual-activity on

set -g status-left-length 70
set -g status-left "#[fg=green] #h :: #[fg=brightblue]#(curl icanhazip.com) ::#[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]::%l:%M %p"

set -g mouse on


# a good example of how to copy and paste: https://leanside.com/2014/01/copy-paste-in-tmux/

#now set vi mode and standard vi keys

setw -g mode-keys vi

#change the default keybinds to make vim-like. As explained in the man page, the default keys to enter and exit copy mode are [ .and ] respectively. I reset those
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# while in copy mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Y copy-end-of-line
bind -t vi-copy V rectangle-toggle #changes between linewise and columnwise selection

# in copy mode you can jump around vim-like - / and ? work. However there are no motions (you can't y5w or yap)
# once copied:  #=list all buffers	-=delete most recent buffer ==choose buffer interactively

# TO CHECK COPY MODE KEYS: tmux list-keys -t vi-copy

# tmux list-keys prints all bindings, so you can tmux list-keys | grep <mykey>
# prefix + ? from inside tmux opens the same list

#now closer to  other Vim-like apps: Escape changes the mode, v begins visual selection, y yanks text to buffer and p puts text copied from the buffer
#So to copy some text from tmux and paste it
#   Ctrl+b,Escape   # enter copy mode
#   (move cursor to start or end of the desired string)
#   v               # activate highlighting
#   (move cursor to cover the requisite string)
#   y               # capture the string
#   q               # exit copy mode
#   Ctrl+b,p       # put/paste the text in the desired location

#next step is to connect that up to osx's paste buffer
#see here: http://unix.stackexchange.com/questions/15715/getting-tmux-to-copy-a-buffer-to-the-clipboard

# you must brew install reattach-to-user-namespace for this next bit to not crash out tmux
set-option -g default-command "reattach-to-user-namespace -l zsh #or bash"...
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

#To copy the buffer from tmux (you should have already copied something using tmux) 
# into the Mac pasteboard, use <tmux-key> Control-c. It will now be available for Command-v or pbpaste
#To paste something from the Mac pasteboard, use <tmux-key> Control-v.

#to make new panes start in current dir
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

#change orientation of two panes
# Here is a jewel of a bind which does the task of flipping the orientation of the current pane with the pane before it (in the ordering) -- I had a SO question on this and nobody answered.
# http://stackoverflow.com/a/27450841/3536094
bind -n C-q move-pane -t '.-'
bind C-q move-pane -t '.-'
bind -n C-w move-pane -h -t '.-'
bind C-w move-pane -h -t '.-'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @tpm_plugins '                \
    caiogondim/maglev                \
    tmux-plugins/tpm                 \
    tmux-plugins/tmux-sensible       \
    tmux-plugins/tmux-resurrect      \
    tmux-plugins/tmux-continuum      \
    tmux-plugins/tmux-yank           \
    tmux-plugins/tmux-pain-control   \
    tmux-plugins/tmux-copycat        \
    tmux-plugins/tmux-open           \
    tmux-plugins/tmux-battery        \
    tmux-plugins/tmux-cpu            \
'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
